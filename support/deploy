#!/bin/bash
#
# ARG_OPTIONAL_BOOLEAN([pull],[],[])
# ARG_OPTIONAL_BOOLEAN([ignore-localization-errors],[],[])
# ARG_HELP([Deploy Tracker])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.8.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate


die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}


begins_with_short_option()
{
	local first_option all_short_options='h'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_pull="off"
_arg_ignore_localization_errors="off"


print_help()
{
	printf '%s\n' "Deploy Tracker"
	printf 'Usage: %s [--(no-)pull] [--(no-)ignore-localization-errors] [-h|--help]\n' "$0"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			--no-pull|--pull)
				_arg_pull="on"
				test "${1:0:5}" = "--no-" && _arg_pull="off"
				;;
			--no-ignore-localization-errors|--ignore-localization-errors)
				_arg_ignore_localization_errors="on"
				test "${1:0:5}" = "--no-" && _arg_ignore_localization_errors="off"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

set -e

scriptdir="`dirname \"$0\"`"
cd $scriptdir/../
if [ "$_arg_pull" == "on" ]; then
    git checkout $(cat deploy/branch 2> /dev/null || echo master)
    git pull --ff-only
fi
source deploy/pyenv/bin/activate
pip install -U pip
pip install -U -r support/requirements.txt
cd trackersite
python manage.py migrate
python manage.py collectstatic --noinput

if [ "$_arg_ignore_localization_errors" == "on" ]; then
    python manage.py compilemessages || true
else
    python manage.py compilemessages
fi

cd ../
touch deploy/reload
# ] <-- needed because of Argbash
